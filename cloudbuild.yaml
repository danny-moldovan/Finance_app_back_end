steps:
  # Install dependencies
  #- name: python
  #  entrypoint: pip
  #  args: ["install", "-r", "requirements.txt", "--user"]

  # Run unit tests
  #- name: python
  #  entrypoint: python
  #  args: ["-m", "pytest", "--junitxml=${SHORT_SHA}_test_log.xml"] 

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'us-central1-docker.pkg.dev/${PROJECT_ID}/finance-app-back-end/app:latest', '.']

  # Run evaluation on the test set
  - name: "gcr.io/cloud-builders/curl"
    args:
      - "-X"
      - "POST"
      - "https://finance-app-back-end-911835065349.us-central1.run.app/generate_batch_summary"
      - "-H"
      - "Content-Type: application/json"
      - "-d"
      - '{"input_filename": "test_cases.txt", "output_filename": "test_cases_processed_current.txt"}'

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',  'us-central1-docker.pkg.dev/${PROJECT_ID}/finance-app-back-end/app:latest']

  # Deploy to Cloud Run
  - name: google/cloud-sdk`
    args: ['gcloud', 'run', 'deploy', 'finance-app-back-end', 
           '--image=us-central1-docker.pkg.dev/${PROJECT_ID}/finance-app-back-end/app:latest', 
           '--region', 'us-central1', '--platform', 'managed', 
           '--allow-unauthenticated',
           '--set-secrets=GEMINI_API_KEY=GEMINI_API_KEY:latest',
           '--memory', '1300Mi']

# Save test logs to Google Cloud Storage
#artifacts:
#  objects:
#    location: gs://${_BUCKET_NAME}/
#    paths:
#      - ${SHORT_SHA}_test_log.xml

# Store images in Google Artifact Registry 
#images:
#  - us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/app:${SHORT_SHA}

# Options
options:
  logging: CLOUD_LOGGING_ONLY
timeout: 3600s